name: $(Date:yyyyMMdd).$(Rev:r)
variables:
  - name: Codeql.Enabled
    value: true
schedules:
  - cron: 0 2 * * *
    branches:
      include:
        - main
resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/main
    - repository: CustomPipelineTemplates # Consume the MicroBuild template via a repo resource
      type: git
      name: 1ESPipelineTemplates/MicroBuildTemplate
trigger: none
extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@CustomPipelineTemplates
  parameters:
    oneESTemplateTag: ${{ parameters.oneESTemplateTag }}
    pool: # This example is for Windows, but Mac/Linux are also supported.
      name: VSEngSS-MicroBuild2022-1ES
      demands:
      - msbuild
      - visualstudio
      os: windows
    stages:
      - stage: Build
        jobs:
          - job: Job_1
            displayName: VSCode-Test-Runner-Nightly
            templateContext:
              mb: # Enable the MicroBuild Signing toolset
              signing:
                enabled: true
                signType: test # options are 'real' & 'test'
                zipSources: false
              outputs:
                - output: pipelineArtifact
                  artifactName: extension
                  targetPath: $(Build.ArtifactStagingDirectory)
                  displayName: "Publish Artifact: extension"
            steps:
              - checkout: self
                fetchTags: true
              - task: JavaToolInstaller@0
                displayName: Use Java 17
                inputs:
                  versionSpec: "17"
                  jdkArchitectureOption: x64
                  jdkSourceOption: PreInstalled
              - task: Npm@1
                displayName: npm install
                inputs:
                  verbose: false
              - task: Npm@1
                displayName: npm run lint
                inputs:
                  command: custom
                  verbose: false
                  customCommand: run lint
              - task: Npm@1
                displayName: npm run build-plugin
                inputs:
                  command: custom
                  verbose: false
                  customCommand: run build-plugin
              # - task: CmdLine@2
              #   displayName: ESRP CodeSigning
              #   inputs:
              #     script: dotnet $MBSIGN_APPFOLDER/ddsignfiles.dll /file:server\\com.microsoft.java.test.*.jar /certs:100010171
              # - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@5
              #   displayName: ESRP CodeSigning
              #   inputs:
              #     ConnectedServiceName: $(EsrpConnectionServiceName)
              #     AppRegistrationClientId: $(AppRegistrationClientId)
              #     AppRegistrationTenantId: $(AppRegistrationTenantId)
              #     AuthAKVName: $(AuthAKVName)
              #     AuthCertName: $(AuthCertName)
              #     AuthSignCertName: $(AuthSignCertName)
              #     FolderPath: server
              #     Pattern: com.microsoft.java.test.*.jar
              #     signConfigType: inlineSignParams
              #     inlineOperation: |-
              #       [
              #               {
              #                   "KeyCode" : "CP-447347-Java",
              #                   "OperationCode" : "JavaSign",
              #                   "Parameters" : {
              #                       "SigAlg" : "SHA256withRSA",
              #                       "Timestamp" : "-tsa http://sha256timestamp.ws.digicert.com/sha256/timestamp"
              #                   },
              #                   "ToolName" : "sign",
              #                   "ToolVersion" : "1.0"
              #               },
              #               {
              #                   "KeyCode" : "CP-447347-Java",
              #                   "OperationCode" : "JavaVerify",
              #                   "Parameters" : {},
              #                   "ToolName" : "sign",
              #                   "ToolVersion" : "1.0"
              #               }
              #       ]
              - task: CmdLine@2
                displayName: Replace AI Key
                inputs:
                  script: npx json@9.0.6 -I -f package.json -e "this.aiKey=\"%AI_KEY%\""
              - task: Bash@3
                displayName: Bash Script
                inputs:
                  targetType: inline
                  script: |-
                    node ./scripts/prepare-nightly-build.js
                    mv ./package.insiders.json ./package.json
              - task: CmdLine@2
                displayName: vsce package --pre-release
                inputs:
                  script: npx @vscode/vsce@latest package --pre-release -o extension.vsix
              ### Copy files for APIScan
              - task: CopyFiles@2
                displayName: "Copy Files for APIScan"
                inputs:
                  Contents: "*.vsix"
                  TargetFolder: $(Agent.TempDirectory)/APIScanFiles
                condition: and(succeeded(), ne(variables['DisableAPIScan'], 'true'))
              ### Run latest version of APIScan listed at https://www.1eswiki.com/wiki/APIScan_Build_Task
              - task: APIScan@2
                displayName: Run APIScan
                inputs:
                  softwareFolder: $(Agent.TempDirectory)/APIScanFiles
                  softwareName: "vscode-java-test"
                  softwareVersionNum: "$(Build.BuildId)"
                  isLargeApp: false
                  toolVersion: "Latest"
                condition: and(succeeded(), ne(variables['DisableAPIScan'], 'true'))
                env:
                  AzureServicesAuthConnectionString: runAs=App;AppId=$(ApiScanClientId);TenantId=$(ApiScanTenant);AppKey=$(ApiScanSecret)
              - script: npx @vscode/vsce@latest generate-manifest -i extension.vsix -o extension.manifest
                displayName: 'Generate extension manifest'
              - script: cp extension.manifest extension.signature.p7s
                displayName: 'Prepare manifest for signing'
              - task: CmdLine@2
                displayName: Sign extension
                inputs:
                  script: dotnet $MBSIGN_APPFOLDER/ddsignfiles.dll /file:extension.signature.p7s /certs:4014052
              # - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@5
              #   inputs:
              #     ConnectedServiceName: $(EsrpConnectionServiceName)
              #     AppRegistrationClientId: $(AppRegistrationClientId)
              #     AppRegistrationTenantId: $(AppRegistrationTenantId)
              #     AuthAKVName: $(AuthAKVName)
              #     AuthCertName: $(AuthCertName)
              #     AuthSignCertName: $(AuthSignCertName)
              #     FolderPath: '.'
              #     Pattern: 'extension.signature.p7s'
              #     signConfigType: inlineSignParams
              #     inlineOperation: |
              #       [
              #         {
              #           "keyCode": "CP-401405",
              #           "operationSetCode": "VSCodePublisherSign",
              #           "parameters" : [],
              #           "toolName": "sign",
              #           "toolVersion": "1.0"
              #         }
              #       ]
              #     SessionTimeout: 90
              #     MaxConcurrency: 25
              #     MaxRetryAttempts: 5
              #     PendingAnalysisWaitTimeoutMinutes: 5
              #   displayName: 'Sign extension'
              - task: CopyFiles@2
                displayName: "Copy Files to: $(Build.ArtifactStagingDirectory)"
                inputs:
                  Contents: |
                    extension.vsix
                    extension.manifest
                    extension.signature.p7s
                  TargetFolder: $(Build.ArtifactStagingDirectory)
